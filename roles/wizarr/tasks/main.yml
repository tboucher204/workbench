---
- name: Ensure Wizarr Data Volume Exist
  when: inventory_hostname == groups['media'][0]
  community.docker.docker_volume:
    name: wizarr
    state: present
  tags: wizarr

- name: Deploy Wizarr Service
  when: inventory_hostname == groups['managers'][0]
  community.docker.docker_swarm_service:
    name: wizarr
    hostname: "{{wizarr_hostname}}"
    image: "{{wizarr_docker_image}}:{{wizarr_version}}"
    networks:
      - "{{traefik_network}}"
    mode: replicated
    force_update: false
    restart_config:
      condition: on-failure
    env:
      TZ: "{{default_timezone}}"
      APP_URL: "https://join.{{project_tld}}"
      DISABLE_BUILTIN_AUTH: "false"
    placement:
      constraints:
        - node.id == {{docker_worker2_node_id}}
    replicas: 1
    mounts:
      - source: wizarr
        target: /data/database
        type: volume
    labels:
      traefik.http.routers.wizarr.entrypoints: "websecure"
      traefik.http.routers.wizarr.rule: "Host(`join.{{project_tld}}`)"
      traefik.http.routers.wizarr.middlewares: "default-headers@file,authelia@file"
      traefik.http.routers.wizarr.tls: "true"
      traefik.http.routers.wizarr.service: "wizarr"
      # traefik.http.routers.wizarr.tls.certresolver: "{{default_certificate_resolver}}" # Un-Comment this line to use a rule-based cert
      traefik.http.services.wizarr.loadbalancer.server.port: "{{wizarr_port}}"
      traefik.enable: "true"
    state: present
  tags: wizarr
  