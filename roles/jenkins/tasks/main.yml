---
- name: Ensure jenkins Directory Exist
  when: inventory_hostname == groups['workers'][0]
  file:
    path: "{{project_root_directory}}/jenkins"
    state: directory
  tags: jenkins

- name: Deploy Jenkins Service
  when: inventory_hostname == groups['managers'][0]
  community.docker.docker_swarm_service:
    name: jenkins
    hostname: "{{jenkins_hostname}}"
    user: root
    image: "{{jenkins_docker_image}}:{{jenkins_version}}"
    networks:
      - "{{traefik_network}}"
    mode: replicated
    force_update: false
    restart_config:
      condition: on-failure
    placement:
      constraints:
        - node.id == {{docker_worker1_node_id}}
    replicas: 1
    mounts:
      - source: /datavol/apps/jenkins/
        target: /var/jenkins_home/
        type: bind
    labels:
      traefik.http.routers.jenkins.entrypoints: "websecure"
      traefik.http.routers.jenkins.rule: "Host(`ci.{{project_tld}}`)"
      traefik.http.routers.jenkins.middlewares: "default-headers@file,authelia@file"
      traefik.http.routers.jenkins.tls: "true"
      traefik.http.routers.jenkins.service: "jenkins"
      # traefik.http.routers.jenkins.tls.certresolver: "{{default_certificate_resolver}}" # Un-Comment this line to use a rule-based cert
      traefik.http.services.jenkins.loadbalancer.server.port: "{{jenkins_port}}"
      traefik.enable: "true"
    state: present
  tags: jenkins