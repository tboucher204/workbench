---
- name: Ensure Adminer Directory Exist
  when: inventory_hostname == groups['workers'][0]
  file:
    path: "{{ project_root_directory }}/adminer"
    state: directory
  tags: adminer

- name: Ensure Homer Configuration Files Exist
  when: inventory_hostname == groups['workers'][0]
  template:
    src: login-servers.php.j2
    dest: "{{ project_root_directory }}/adminer/login-servers.php"
  tags: adminer
  no_log: true

- name: Deploy Adminer Service
  when: inventory_hostname == groups['managers'][0]
  community.docker.docker_swarm_service:
    name: adminer
    hostname: "{{ adminer_hostname }}.{{ project_tld }}"
    image: "{{ adminer_docker_image }}:{{ adminer_version }}"
    networks:
      - "{{ traefik_network }}"
    mode: replicated
    force_update: true
    restart_config:
      condition: on-failure
    env:
      ADMINER_PLUGINS: "login-servers"
    placement:
      constraints:
        - node.id == {{ docker_worker1_node_id }}
    replicas: 1
    mounts:
      - source: "{{project_root_directory}}/adminer/"
        target: /var/www/html/plugins-enabled
        type: bind
    labels:
      traefik.http.routers.adminer.entrypoints: "websecure"
      traefik.http.routers.adminer.rule: "Host(`adminer.{{project_tld}}`)"
      traefik.http.routers.adminer.middlewares: "authelia@file"
      traefik.http.routers.adminer.tls: "true"
      traefik.http.routers.adminer.service: "adminer"
      # traefik.http.routers.adminer.tls.certresolver: "{{default_certificate_resolver}}" # Un-Comment this line to use a rule-based cert
      traefik.http.services.adminer.loadbalancer.server.port: "{{adminer_port}}"
      traefik.enable: "true"
    state: present
  tags: adminer