---
- name: Ensure Grafana Data Volume Exist
  when: inventory_hostname == groups['workers'][0]
  community.docker.docker_volume:
    name: grafana_data
    state: present
  tags: grafana

- name: Ensure Grafana Config Volume Exist
  when: inventory_hostname == groups['workers'][0]
  community.docker.docker_volume:
    name: grafana_config
    state: present
  tags: grafana

- name: Deploy grafana Service
  when: inventory_hostname == groups['managers'][0]
  community.docker.docker_swarm_service:
    name: grafana
    hostname: "{{grafana_hostname}}"
    image: "{{grafana_docker_image}}:{{grafana_version}}"
    env:
      GF_PATHS_CONFIG: "/etc/grafana/grafana.ini"
      GF_PATHS_DATA: "/var/lib/grafana"
      GF_PATHS_HOME: "/usr/share/grafana"
      GF_PATHS_LOGS: "/var/log/grafana"
      GF_PATHS_PLUGINS: "/var/lib/grafana/plugins"
      GF_PATHS_PROVISIONING: "/etc/grafana/provisioning"
      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-worldmap-panel"
    networks:
      - "{{traefik_network}}"
    mode: replicated
    force_update: false
    restart_config:
      condition: on-failure
    placement:
      constraints:
        - node.id == {{docker_worker1_node_id}}
    replicas: 1
    mounts:
      - source: grafana_data
        target: /var/lib/grafana
        type: volume
      - source: grafana_config
        target: /etc/grafana
        type: volume
    labels:
      traefik.http.routers.grafana.entrypoints: "websecure"
      traefik.http.routers.grafana.rule: "Host(`grafana.{{project_tld}}`)"
      traefik.http.routers.grafana.middlewares: "default-headers@file,authentik@file"
      traefik.http.routers.grafana.tls: "true"
      traefik.http.routers.grafana.service: "grafana"
      # traefik.http.routers.grafana.tls.certresolver: "{{default_certificate_resolver}}" # Un-Comment this line to use a rule-based cert
      traefik.http.services.grafana.loadbalancer.server.port: "{{grafana_port}}"
      traefik.enable: "true"
    state: present
  tags: grafana