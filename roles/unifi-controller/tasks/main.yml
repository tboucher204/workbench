---
- name: Ensure Unifi Data Volume Exist
  when: inventory_hostname == groups['managers'][0]
  file:
    path: "{{project_root_directory}}/unifi-controller"
    state: directory
  tags: unifi-controller

- name: Deploy Unifi Service
  when: inventory_hostname == groups['managers'][0]
  community.docker.docker_swarm_service:
    name: unifi
    hostname: "{{unifi_hostname}}"
    image: "{{unifi_docker_image}}:{{unifi_version}}"
    networks:
      - "{{traefik_network}}"
    env:
      PGID: "{{default_pgid}}"
      PUID: "{{default_puid}}"
      TZ: "{{default_timezone}}"
    publish:
      - published_port: "3478"
        target_port: "3478"
        protocol: udp
        mode: host
      - published_port: "10001"
        target_port: "10001"
        protocol: udp
        mode: host
      - published_port: "8080"
        target_port: "8080"
        protocol: tcp
        mode: host
      - published_port: "8443"
        target_port: "8443"
        protocol: tcp
        mode: host
      - published_port: "1900"
        target_port: "1900"
        protocol: udp
        mode: host
      - published_port: "8843"
        target_port: "8843"
        protocol: tcp
        mode: host
      - published_port: "8880"
        target_port: "8880"
        protocol: tcp
        mode: host
      - published_port: "6789"
        target_port: "6789"
        protocol: tcp
        mode: host
      - published_port: "5514"
        target_port: "5514"
        protocol: udp
        mode: host
    mode: global
    force_update: true
    restart_config:
      condition: on-failure
    placement:
      constraints:
        - node.id == {{docker_worker1_node_id}}
    mounts:
      - source: "{{project_root_directory}}/unifi-controller"
        target: /config
        type: volume
    labels:
      traefik.http.routers.unifi.entrypoints: "websecure"
      traefik.http.routers.unifi.rule: "Host(`unifi.{{project_tld}}`)"
      traefik.http.routers.unifi.middlewares: "authelia@file"
      traefik.http.routers.unifi.tls: "true"
      traefik.http.routers.unifi.service: "unifi"
      # traefik.http.routers.unifi.tls.certresolver: "{{default_certificate_resolver}}" # Un-Comment this line to use a rule-based cert
      traefik.http.services.unifi.loadbalancer.server.port: "8443"
      traefik.enable: "true"
    state: present
  tags: unifi