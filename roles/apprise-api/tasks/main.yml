---
- name: Ensure Apprise-api Volume Exist
  when: inventory_hostname == groups['workers'][0]
  community.docker.docker_volume:
    name: apprise_api
    state: present
  tags: apprise-api

- name: Deploy Apprise-api Service
  when: inventory_hostname == groups['managers'][0]
  community.docker.docker_swarm_service:
    name: apprise-api
    hostname: "{{ apprise_api_hostname }}"
    image: "{{ apprise_api_docker_image }}:{{ apprise_api_version }}"
    networks:
      - "{{ traefik_network }}"
    mode: replicated
    force_update: false
    restart_config:
      condition: on-failure
    env:
      PUID: "{{default_puid}}"
      PGID: "{{default_pgid}}"
      TZ: "{{default_timezone}}"
      APPRISE_STATELESS_URLS: "mailto://{{ apprise_stateless_url }}/?to={{ apprise_to_address }}"
    placement:
      constraints:
        - node.id == {{ docker_master1_node_id }}
    replicas: 1
    labels:
      traefik.http.routers.apprise-api.rule: "Host(`apprise.{{ project_tld }}`)"
      traefik.http.routers.apprise-api.middlewares: "default-headers@file,authentik@file"
      traefik.http.routers.apprise-api.entrypoints: "websecure"
      traefik.http.routers.apprise-api.tls: "true"
      traefik.http.routers.apprise-api.service: "apprise-api"
      # traefik.http.routers.apprise-api.tls.certresolver: "{{ default_certificate_resolver }}" # Un-Comment this line to use a rule-based certs
      traefik.http.services.apprise-api.loadbalancer.server.port: "{{ apprise_api_port }}"
      traefik.enable: "true"
    mounts:
      - source: apprise_api
        target: /config
        type: volume
    state: present
  tags: apprise-api