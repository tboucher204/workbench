---
- name: Ensure Tautulli Volume Exist
  when: inventory_hostname == groups['workers'][0]
  community.docker.docker_volume:
    name: tautulli
    state: present
  tags: tautulli

- name: Deploy Tautulli Service
  when: inventory_hostname == groups['managers'][0]
  community.docker.docker_swarm_service:
    name: tautulli
    hostname: "{{tautulli_hostname}}"
    image: "{{tautulli_docker_image}}:{{tautulli_version}}"
    networks:
      - "{{traefik_network}}"
    mode: replicated
    force_update: false
    env:
      PUID: "{{media_user}}"
      PGID: "{{media_group}}"
      TZ: "{{default_timezone}}"
    restart_config:
      condition: on-failure
    placement:
      constraints:
        - node.id == {{docker_worker1_node_id}}
    replicas: 1
    mounts:
      - source: tautulli
        target: /config
        type: volume
    labels:
      traefik.http.routers.tautulli.entrypoints: "websecure"
      traefik.http.routers.tautulli.rule: "Host(`stats.{{project_tld}}`)"
      traefik.http.routers.tautulli.middlewares: "default-headers@file,authelia@file"
      traefik.http.routers.tautulli.tls: "true"
      traefik.http.routers.tautulli.service: "tautulli"
      # traefik.http.routers.tautulli.tls.certresolver: "{{default_certificate_resolver}}" # Un-Comment this line to use a rule-based cert
      traefik.http.services.tautulli.loadbalancer.server.port: "{{tautulli_port}}"
      traefik.enable: "true"
    state: present
  tags: tautulli