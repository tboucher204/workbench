---
- name: Ensure Media Datasets Exist
  when: inventory_hostname == groups['media'][0]
  file:
    path: "{{item}}"
    state: directory
  loop:
    - /media/Audiobooks/
    - /media/Books/
    - /media/Comics/
    - /media/Music/
    - /media/Music Videos/
    - /media/Photos/
    - /media/Playlists/
    - /media/Podcasts/
    - /media/Videos/
    - /media/Videos/Anime TV/
    - /media/Videos/Fitness/
    - /media/Videos/Miscellaneous/
    - /media/Videos/Movies/
    - /media/Videos/TV Series/
  tags: qbittorrent

- name: Ensure Media Download Datasets Exist
  when: inventory_hostname == groups['media'][0]
  file:
    path: "{{item}}"
    state: directory
  loop:
    - /media/Downloads
    - /media/Downloads/incomplete
    - /media/Downloads/anime
    - /media/Downloads/audiobooks
    - /media/Downloads/books
    - /media/Downloads/comics
    - /media/Downloads/kids
    - /media/Downloads/movies
    - /media/Downloads/music
    - /media/Downloads/tv
  tags: qbittorrent

- name: Ensure qBittorrent Dataset Exist
  when: inventory_hostname == groups['media'][0]
  file:
    name: docker_worker2/apps/qbittorrent
    state: directory
  tags: qbittorrent

- name: Ensure qBittorrent Configuration Files Exist
  when: inventory_hostname == groups['media'][0]
  template:
    src: qBittorrent.conf.j2
    dest: "{{project_root_directory}}/qbittorrent/qBittorrent.conf"
  tags: qbittorrent
  no_log: true

- name: Deploy qBittorrent Service
  when: inventory_hostname == groups['managers'][0]
  community.docker.docker_swarm_service:
    name: qbittorrent
    hostname: "{{qbittorrent_hostname}}"
    image: "{{qbittorrent_docker_image}}:{{qbittorrent_version}}"
    networks:
      - "{{traefik_network}}"
    mode: replicated
    force_update: false
    restart_config:
      condition: on-failure
    env:
      PUID: "{{media_user}}"
      PGID: "{{media_group}}"
      TZ: "{{default_timezone}}"
      DOCKER_MODS: "gilbn/theme.park:{{qbittorrent_hostname}}"
      TP_THEME: "{{theme_park_default}}"
      UMASK: "022"
      WEBUI_PORT: "{{qbittorrent_port}}"
    placement:
      constraints:
        - node.id == {{docker_worker2_node_id}}
    replicas: 1
    publish:
      - published_port: "6881"
        target_port: "6881"
      - published_port: "6881"
        target_port: "6881"
        protocol: "udp"
    mounts:
      - source: "/datavol/apps/qbittorrent/"
        target: /config/
        type: bind
      - source: "{{project_download_directory}}"
        target: /media/downloads/
        type: bind
    labels:
      traefik.http.routers.qbittorrent.entrypoints: "websecure"
      traefik.http.routers.qbittorrent.rule: "Host(`qbittorrent.{{project_tld}}`)"
      traefik.http.routers.qbittorrent.middlewares: "default-headers@file,authelia@file"
      traefik.http.routers.qbittorrent.tls: "true"
      traefik.http.routers.qbittorrent.service: "qbittorrent"
      # traefik.http.routers.qbittorrent.tls.certresolver: "{{default_certificate_resolver}}" # Un-Comment this line to use a rule-based cert
      traefik.http.services.qbittorrent.loadbalancer.server.port: "{{qbittorrent_port}}"
      traefik.enable: "true"
    state: present
  tags: qbittorrent