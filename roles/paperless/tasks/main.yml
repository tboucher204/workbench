---
- name: Ensure Paperless Data Volume Exist
  when: inventory_hostname == groups['managers'][0]
  docker_volume:
    name: paperless_data
    state: present
  tags: paperless

- name: Ensure Paperless Media Volume Exist
  when: inventory_hostname == groups['managers'][0]
  docker_volume:
    name: paperless_media
    state: present
  tags: paperless

- name: Ensure Paperless Directories Exist
  when: inventory_hostname == groups['workers'][0]
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{project_media_directory}}/Documents/"
    - "{{project_media_directory}}/Exports/"
    - "{{project_media_directory}}/Watch/paperless-import/"
  tags: paperless

- import_tasks: roles/postgres/tasks/database_manager.yml
  when: inventory_hostname == groups['managers'][0]
  vars:
    database_name: "{{paperless_database}}"
    database_user: "{{paperless_database_user}}"
    database_password: "{{paperless_database_password}}"
  tags: paperless
  no_log: true

- name: Deploy Paperless Service
  when: inventory_hostname == groups['managers'][0]
  community.docker.docker_swarm_service:
    name: paperless
    hostname: "{{paperless_hostname}}"
    image: "{{paperless_docker_image}}:{{paperless_version}}"
    networks:
      - "{{traefik_network}}"
    env:
      PAPERLESS_REDIS: "redis://redis:{{redis_port}}"
      PAPERLESS_DBHOST: "{{postgres_hostname}}"
      PAPERLESS_DBPORT: "{{postgres_port}}"
      PAPERLESS_DBNAME: "{{paperless_database}}"
      PAPERLESS_DBUSER: "{{paperless_database_user}}"
      PAPERLESS_DBPASS: "{{paperless_database_password}}"
      PAPERLESS_ADMIN_USER: "{{paperless_admin_username}}"
      PAPERLESS_ADMIN_MAIL: "{{paperless_admin_email}}"
      PAPERLESS_ADMIN_PASSWORD: "{{paperless_admin_password}}"
      PAPERLESS_CONSUMPTION_DIR: "/usr/src/paperless/consume/"
      PAPERLESS_MEDIA_ROOT: "/usr/src/paperless/media/"
      PAPERLESS_EMAIL_HOST: "{{email_host}}"
      PAPERLESS_EMAIL_PORT: "{{email_port}}"
      PAPERLESS_EMAIL_HOST_USER: "{{email_user}}"
      PAPERLESS_EMAIL_HOST_PASSWORD: "{{email_password}}"
      PAPERLESS_EMAIL_USE_TLS: "True"
      PAPERLESS_EMAIL_USE_SSL: "True"
      PAPERLESS_URL: "https://docs.{{project_tld}}"
      PAPERLESS_SECRET_KEY: "{{paperless_secret_key}}"
      PAPERLESS_TIME_ZONE: "{{default_timezone}}"
      USERMAP_UID: "{{media_user}}"
      USERMAP_GID: "{{media_group}}"
    mode: replicated
    force_update: false
    restart_config:
      condition: on-failure
    mounts:
      - source: paperless_data
        target: /usr/src/paperless/data/
        type: volume
      - source: "{{project_media_directory}}/Documents/"
        target: /usr/src/paperless/media/
        type: bind
      - source: "{{project_media_directory}}/Exports/"
        target: /usr/src/paperless/export/
        type: bind
      - source: "{{project_media_directory}}/Watch/paperless-import/"
        target: /usr/src/paperless/consume/
        type: bind
    placement:
      constraints:
        - node.id == {{docker_worker1_node_id}}
    replicas: 1
    labels:
      traefik.http.routers.paperless.entrypoints: "websecure"
      traefik.http.routers.paperless.rule: "Host(`docs.{{project_tld}}`)"
      traefik.http.routers.paperless.tls: "true"
      traefik.http.routers.paperless.service: "paperless"
      # traefik.http.routers.paperless.tls.certresolver: "{{default_certificate_resolver}}" # Un-Comment this line to use a rule-based cert
      traefik.http.services.paperless.loadbalancer.server.port: "{{paperless_port}}"
      traefik.enable: "true"
    state: present
  tags: paperless