---
- name: Ensure Postgres Directory Exist
  when: inventory_hostname == groups['workers'][0]
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  loop:
    - "{{ project_root_directory }}/postgres/data/"
  tags: postgres

- name: Ensure Prometheus Data Volume Exist
  when: inventory_hostname == groups['workers'][0]
  community.docker.docker_volume:
    name: postgres14
    state: present
  tags: prometheus

- name: Deploy postgres Service
  when: inventory_hostname == groups['managers'][0]
  community.docker.docker_swarm_service:
    name: postgres
    hostname: "{{postgres_hostname}}"
    image: "{{postgres_docker_image}}:{{postgres_version}}"
    env:
      POSTGRES_PASSWORD: "{{postgres_root_password}}"
      PGDATA: "/var/lib/postgresql/data/pgdata"
      POSTGRES_INITDB_ARGS: "--auth-local=trust"
      PGID: "{{default_pgid}}"
      PUID: "{{default_puid}}"
      TZ: "{{default_timezone}}"
    publish:
      - published_port: "{{postgres_port}}"
        target_port: "{{postgres_port}}"
        mode: "host"
    networks:
      - "{{traefik_network}}"
    mode: replicated
    force_update: false
    restart_config:
      condition: on-failure
    placement:
      constraints:
        - node.id == {{docker_master1_node_id}}
    replicas: 1
    mounts:
      - source: postgres14
        target: /var/lib/postgresql/data/
        type: volume
    state: present
  tags: postgres

- name: Wait for Postgres to be up and running
  when: inventory_hostname == groups['managers'][0]
  wait_for:
    host: "{{postgres_localhost}}"
    port: "{{postgres_port}}"
    delay: 15
  tags: postgres