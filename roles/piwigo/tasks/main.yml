---
- name: Ensure Media Dataset Exist
  when: inventory_hostname == groups['media'][0]
  file:
    name: "{{project_media_directory}}/PhotoGallery"
    state: directory
  tags: piwigo

- name: Ensure Piwigo Dataset Exist
  when: inventory_hostname == groups['media'][0]
  file:
    name: "{{project_root_directory}}/piwigo"
    state: directory
  tags: piwigo

# - name: Ensure Piwigo Config Volume Exist
#   when: inventory_hostname == groups['media'][0]
#   community.docker.docker_volume:
#     name: piwigo_config
#     state: present
#   tags: piwigo

- import_tasks: roles/mariadb/tasks/database_manager.yml
  when: inventory_hostname == groups['managers'][0]
  vars:
    database_name: "{{piwigo_database}}"
    database_user: "{{piwigo_database_user}}"
    database_password: "{{piwigo_database_password}}"
  tags: piwigo
  no_log: true

- name: Deploy Piwigo Service
  when: inventory_hostname == groups['managers'][0]
  community.docker.docker_swarm_service:
    name: piwigo
    hostname: "{{piwigo_hostname}}"
    image: "{{piwigo_docker_image}}:{{piwigo_version}}"
    networks:
      - "{{traefik_network}}"
    mode: replicated
    force_update: false
    restart_config:
      condition: on-failure
    env:
      PUID: "{{media_user}}"
      PGID: "{{media_group}}"
      TZ: "{{default_timezone}}"
    placement:
      constraints:
        - node.id == {{docker_worker2_node_id}}
    replicas: 1
    mounts:
      - source: "{{project_root_directory}}/piwigo/"
        target: /config
        type: bind
      - source: "{{project_media_directory}}/PhotoGallery/"
        target: /gallery
        type: bind
    labels:
      traefik.http.routers.piwigo.entrypoints: "websecure"
      traefik.http.routers.piwigo.rule: "Host(`{{picture_tld}}`)"
      traefik.http.routers.piwigo.middlewares: "default-headers@file,authentik@file"
      traefik.http.routers.piwigo.tls: "true"
      traefik.http.routers.piwigo.service: "piwigo"
      # traefik.http.routers.piwigo.tls.certresolver: "{{default_certificate_resolver}}" # Un-Comment this line to use a rule-based cert
      traefik.http.services.piwigo.loadbalancer.server.port: "{{piwigo_port}}"
      traefik.enable: "true"
    state: present
  tags: piwigo